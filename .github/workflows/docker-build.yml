name: Build and Push Docker Image to ECR

on:
  pull_request:
    types: [ closed ]
    branches: [ develop ]
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ROLE_ARN: arn:aws:iam::412381775063:role/TerraformDeployRole

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop')
    environment: ${{ github.ref == 'refs/heads/main' && 'prd' || 'dev' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Resolve ECR registry
        id: ecr
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "registry=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> "$GITHUB_OUTPUT"
          echo "repository=${{ vars.ECR_REPOSITORY }}" >> "$GITHUB_OUTPUT"

      - name: Login to Amazon ECR
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin ${{ steps.ecr.outputs.registry }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ steps.ecr.outputs.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output resolved image repository
        run: |
          echo "ECR Registry: ${{ steps.ecr.outputs.registry }}" >> $GITHUB_STEP_SUMMARY
          echo "ECR Repository: ${{ steps.ecr.outputs.repository }}" >> $GITHUB_STEP_SUMMARY

      - name: Output image details
        run: |
          echo "## 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ steps.ecr.outputs.registry }}/${{ steps.ecr.outputs.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
